{"name": "test_wish_list_003", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_wish_list.Test_009_Wish_List object at 0x0000021529A643E0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cd9eab9913834871eac88d7bb304fd22\")>\n\n    @pytest.mark.sanity\n    def test_wish_list_003(self, setup):\n        self.logger.info(\"***************************** Test Wish List 003 is Start *********************************\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to the base url\")\n        self.lp = LoginPage(self.driver)\n        self.lp.click_on_my_account()\n        self.logger.info(\"Clicking on my account\")\n        self.lp.click_on_login_link()\n        self.logger.info(\"Clicking on login link\")\n        self.lp.set_username(self.username)\n        self.logger.info(\"Entering username\")\n        self.lp.set_password(self.password)\n        self.logger.info(\"Entering password\")\n        self.lp.click_on_login_button()\n        self.logger.info(\"Clicking on the login button\")\n        self.wl = WishListPage(self.driver)\n        self.wl.click_on_store_logo()\n        self.logger.info(\"Clicking on the store logo\")\n        self.atc = AddToCartPage(self.driver)\n        self.logger.info(\"***************************** Verifying Test Wish List 003 *********************************\")\n        if self.atc.is_title_of_the_page(\"Your Store\"):\n            self.logger.info(\"page title is passed\")\n            self.wl.click_on_add_to_wish_list_option_on_feature_page()\n            self.logger.info(\"Clicking on the add to wish list option on product display in feature page\")\n            self.pc = ProductComparePage(self.driver)\n            if 'Success: You have added MacBook to your wish list!' in self.pc.success_message():\n                self.logger.info(\"success message is passed\")\n                time.sleep(2)\n                self.wl.click_on_wish_list_link_in_success_message()\n                self.logger.info(\"Clicking on the wish list link in success message\")\n                if self.wl.get_product_name_from_my_wish_list_page() == \"MacBook\":\n                    self.logger.info(\"Expected product is display\")\n                    assert True\n                    self.logger.info(\"****************** Test Wish List 003 is Passed ****************\")\n                else:\n                    self.logger.error(\"****************** Test Wish List 003 is Failed ****************\")\n>                   assert False\nE                   assert False\n\ntestCases\\test_wish_list.py:149: AssertionError"}, "attachments": [{"name": "log", "source": "84e0e121-fc1e-43ef-b61b-5a8ee5703c09-attachment.txt", "type": "text/plain"}], "start": 1749806484985, "stop": 1749806494122, "uuid": "c099427d-28b3-4ba7-bbbb-1c77131414cb", "historyId": "d4a7c13d8c7f63f7195ca9cc4278cbbe", "testCaseId": "d4a7c13d8c7f63f7195ca9cc4278cbbe", "fullName": "test_wish_list.Test_009_Wish_List#test_wish_list_003", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "suite", "value": "test_wish_list"}, {"name": "subSuite", "value": "Test_009_Wish_List"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "11844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_wish_list"}]}