{"name": "test_register_functionality_003", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_register.Test_001_Register_Functionality object at 0x0000017C0C112780>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e61f419ab4ba7c831cd7c5d7f7aa229d\")>\n\n    def test_register_functionality_003(self, setup):\n        self.logger.info(\"******** Test Register Functionality 002 is Started *********\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to the url\")\n        self.lp = LoginPage(self.driver)\n        self.lp.click_on_my_account()\n        self.logger.info(\"clicking on myAccount drop menu\")\n        self.rf = RegisterPage(self.driver)\n        self.rf.click_on_register_link()\n        self.logger.info(\"clicking on register link\")\n        self.rf.click_on_continue_button()\n        self.logger.info(\"clicking on continue button\")\n        self.logger.info(\"*********** Verifying Test Register Functionality 003 ***********\")\n    \n        self.firstNameWarningMessages = self.driver.find_element(By.XPATH, \"//div[contains(text(),'First Name must be between 1 and 32 characters!')]\")\n        self.lastNameWarningMessages = self.driver.find_element(By.XPATH, \"//div[contains(text(),'Last Name must be between 1 and 32 characters!')]\")\n        self.emailWarningMessages = self.driver.find_element(By.XPATH, \"//div[contains(text(),'E-Mail Address does not appear to be valid!')]\")\n        self.phoneWarningMessages = self.driver.find_element(By.XPATH, \"//div[contains(text(),'Telephone must be between 3 and 32 characters!')]\")\n        self.passwordWarningMessages = self.driver.find_element(By.XPATH, \"//div[contains(text(),'Password must be between 4 and 20 characters!')]\")\n        self.privacyPolicyWarningMessages = self.driver.find_element(By.XPATH, \"//div[normalize-space()='Warning: You must agree to the Privacy Policy!']\")\n    \n    \n        warning_messages = {\n                self.firstNameWarningMessages.text: \"First Name must be between 1 and 32 characters!\",\n                self.lastNameWarningMessages.text: \"Last Name must be between 1 and 32 characters!\",\n                self.emailWarningMessages.text: \"E-Mail Address does not appear to be valid!\",\n                self.phoneWarningMessages.text: \"Telephone must be between 3 and 32 characters!\",\n                self.passwordWarningMessages.text: \"Password must be between 4 and 20 characters!\",\n                self.privacyPolicyWarningMessages.text: \"Warning: You must agree to the Privacy Policy\"\n            }\n        print(warning_messages)\n        for actual, expected in warning_messages.items():\n            if actual == expected:\n                assert True\n                self.logger.info(\"Test Register Functionality 003 Passed.\")\n            else:\n                timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n                self.driver.save_screenshot(f\".\\\\Screenshots\\\\test_register_functionality_003_failed_{timestamp}.png\")\n                self.logger.info(f\"Actual_message: {actual} Expected_message: {expected}\")\n                self.logger.error(f\"Test Register Functionality 003 Failed\")\n>               assert False\nE               assert False\n\ntestCases\\test_register.py:147: AssertionError"}, "attachments": [{"name": "log", "source": "e9b3da17-4f20-48b1-92cc-640c9c4ec75f-attachment.txt", "type": "text/plain"}], "start": 1743415284515, "stop": 1743415287030, "uuid": "8bfc15b0-13fe-48d8-b0e4-b636d9916caf", "historyId": "34e19142739ee8deb5750c5a46fac926", "testCaseId": "34e19142739ee8deb5750c5a46fac926", "fullName": "testCases.test_register.Test_001_Register_Functionality#test_register_functionality_003", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_register"}, {"name": "subSuite", "value": "Test_001_Register_Functionality"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "27656-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_register"}]}