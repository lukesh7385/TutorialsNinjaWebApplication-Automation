{"name": "test_add_to_cart_002", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_add_to_cart.Test_008_Add_To_Cart object at 0x000001CD8FFF6E90>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"be50a0ea86b7f7b356ed0541d7ec1638\")>\n\n    @pytest.mark.sanity\n    def test_add_to_cart_002(self, setup):\n        self.logger.info(\"**************************** Test Add To Cart 002 is Start ****************************\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to the base url\")\n        self.lp = LoginPage(self.driver)\n        self.lp.click_on_my_account()\n        self.logger.info(\"Clicking on my account\")\n        self.lp.click_on_login_link()\n        self.logger.info(\"Clicking on login link\")\n        self.lp.set_username(self.username)\n        self.logger.info(\"Entering username\")\n        self.lp.set_password(self.password)\n        self.logger.info(\"Entering password\")\n        self.lp.click_on_login_button()\n        self.logger.info(\"Clicking on login button\")\n        self.sf = SearchPage(self.driver)\n        self.sf.search_product(\"iMac\")\n        self.logger.info(\"Entering  iMac product to search text box field\")\n        self.sf.click_on_search_button()\n        self.logger.info(\"Clicking on the search icon button\")\n        self.atc = AddToCartPage(self.driver)\n        self.atc.click_on_add_to_wish_list_from_search_result()\n        self.logger.info(\"adding product to wish list from search result\")\n        self.atc.click_on_wish_list_header_option()\n        self.logger.info(\"Clicking on wish list header option\")\n        self.atc.click_on_add_to_cart_icon_option_from_my_wish_list()\n        self.logger.info(\"Clicking on the add to cart option from my wish list\")\n        self.logger.info(\"**************************** Verifying Test Add To Cart 002 ****************************\")\n        self.pc = ProductComparePage(self.driver)\n        if self.pc.success_message().__contains__('Success: You have added iMac to your shopping cart!'):\n            self.atc.click_on_sopping_cart_header_option()\n            self.logger.info(\"Clicking on sopping cart header option\")\n            if self.atc.is_title_of_the_page(\"Shopping Cart\"):\n                if self.atc.get_product_name() == \"iMac\":\n                    assert True\n                    self.logger.info(\"************* Test Add To Cart 002 is Passed ************\")\n                else:\n                    self.logger.error(\"************* Test Add To Cart 002 is Failed ************\")\n                    assert False\n            else:\n                self.logger.error(\"************* Test Add To Cart 002 is Failed ************\")\n                assert False\n        else:\n            self.logger.error(\"************* Test Add To Cart 002 is Failed ************\")\n>           assert False\nE           assert False\n\ntestCases\\test_add_to_cart.py:104: AssertionError"}, "attachments": [{"name": "log", "source": "cf98f55a-74db-4757-96df-073f5de2e3c5-attachment.txt", "type": "text/plain"}], "start": 1749287496272, "stop": 1749287520389, "uuid": "d27b108f-9053-4c7d-8cf1-06b907b74a52", "historyId": "f79a14a9ce610c910e7227dffb66f452", "testCaseId": "f79a14a9ce610c910e7227dffb66f452", "fullName": "test_add_to_cart.Test_008_Add_To_Cart#test_add_to_cart_002", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "suite", "value": "test_add_to_cart"}, {"name": "subSuite", "value": "Test_008_Add_To_Cart"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "15932-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_add_to_cart"}]}