{"name": "test_register_functionality_004", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_register.Test_001_Register_Functionality object at 0x000001EA94DE2EA0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f3cd791bc954409df8be2b7344b0f8b6\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_register_functionality_004(self, setup):\n        self.logger.info(\"******** Test Register Functionality 004 is Started *********\")\n        self.driver = setup\n        self.logger.info(\"Navigating to the url\")\n        self.driver.get(self.baseURL)\n        self.lp = LoginPage(self.driver)\n        self.logger.info(\"clicking on myAccount drop menu\")\n        self.lp.click_on_my_account()\n        self.rf = RegisterPage(self.driver)\n        self.logger.info(\"clicking on register link\")\n        self.rf.click_on_register_link()\n        self.logger.info(\"*************** Providing Registration Details ***************\")\n        self.rf.set_firstname(\"Lukesh\")\n        self.rf.set_lastname(\"Ade\")\n        self.email = self.rf.random_generator() + \"@gmail.com\"\n        self.rf.set_email(self.email)\n        self.rf.set_phone_no(\"1234567890\")\n        self.rf.set_password(\"12345\")\n        self.rf.set_confirm_password(\"12345\")\n        self.rf.click_on_radiobutton_newsletter_yes()\n        self.rf.click_on_checkbox_privacy_policy()\n        self.rf.click_on_continue_button()\n        self.logger.info(\"*************** Verifying Register Functionality 004  ***************\")\n        exp_title = \"Your Account Has Been Created!\"\n        if self.driver.title == exp_title:\n            self.rf.click_on_continue_button2()\n            exp_title = \"My Account\"\n            if self.driver.title == exp_title:\n                self.rf.clicking_on_news_letter_option()\n                if self.driver.find_element(By.XPATH, \"//input[@value='1']\").is_selected():\n                    self.driver.find_element(By.XPATH, \"//div[@class='pull-right']\").click()\n                    success_message = self.driver.find_element(By.XPATH, \"//div[@class='alert alert-success alert-dismissible']\").text\n                    if success_message == \"Success: Your newsletter subscription has been successfully updated!\":\n                        assert True\n                        self.logger.info(\"******* Test Register Functionality 004 is Passed ********\")\n                    else:\n                        self.logger.info(\"******* Test Register Functionality 004 is Failed ********\")\n                        self.driver.save_screenshot(\".\\\\Screenshots\\\\test_register_functionality_004_failed.png\")\n                        assert False\n                else:\n                    self.logger.info(\"******* Test Register Functionality 004 is Failed ********\")\n                    self.driver.save_screenshot(\".\\\\Screenshots\\\\test_register_functionality_004_failed.png\")\n                    assert False\n            else:\n                self.logger.info(\"**********  Test Register Functionality 004 is Failed **********\")\n                self.driver.save_screenshot(\".\\\\Screenshots\\\\\" + \"test_register_functionality_001.png\")\n                self.driver.close()\n                assert False\n        else:\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\\" + \"test_register_functionality_004_failed.png\")\n            self.logger.info(\"**********  Test Register Functionality 004 Failed **********\")\n            self.driver.close()\n>           assert False\nE           assert False\n\ntestCases\\test_register.py:205: AssertionError"}, "start": 1750007105903, "stop": 1750007108357, "uuid": "306c0aba-f322-4715-a73c-d780fede3748", "testCaseId": "aedc9f06843056f662457a0555d2cf37", "fullName": "test_register.Test_001_Register_Functionality#test_register_functionality_004"}