{"name": "test_wish_list_016", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff68ad86f95+76917]\n\tGetHandleVerifier [0x0x7ff68ad86ff0+77008]\n\t(No symbol) [0x0x7ff68ab39dea]\n\t(No symbol) [0x0x7ff68ab90256]\n\t(No symbol) [0x0x7ff68ab9050c]\n\t(No symbol) [0x0x7ff68abe3887]\n\t(No symbol) [0x0x7ff68abb84af]\n\t(No symbol) [0x0x7ff68abe065c]\n\t(No symbol) [0x0x7ff68abb8243]\n\t(No symbol) [0x0x7ff68ab81431]\n\t(No symbol) [0x0x7ff68ab821c3]\n\tGetHandleVerifier [0x0x7ff68b05d2cd+3051437]\n\tGetHandleVerifier [0x0x7ff68b057923+3028483]\n\tGetHandleVerifier [0x0x7ff68b0758bd+3151261]\n\tGetHandleVerifier [0x0x7ff68ada185e+185662]\n\tGetHandleVerifier [0x0x7ff68ada971f+218111]\n\tGetHandleVerifier [0x0x7ff68ad8fb14+112628]\n\tGetHandleVerifier [0x0x7ff68ad8fcc9+113065]\n\tGetHandleVerifier [0x0x7ff68ad76c98+10616]\n\tBaseThreadInitThunk [0x0x7ff9dbdbe8d7+23]\n\tRtlUserThreadStart [0x0x7ff9dce5c34c+44]", "trace": "self = <testCases.test_wish_list.Test_009_Wish_List object at 0x00000280CB9C3DD0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"15f055ed59b5a8984cea0a1a5224ed0c\")>\n\n    @pytest.mark.sanity\n    def test_wish_list_016(self, setup):\n        self.logger.info(\"*************************** Test Wish List 016 is Start ****************************\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to the base url\")\n        self.sf = SearchPage(self.driver)\n        self.sf.search_product(\"iMac\")\n        self.sf.click_on_search_button()\n        self.wl = WishListPage(self.driver)\n        self.wl.click_on_add_to_wish_list_option_on_the_product_display_in_search_result()\n        self.logger.info(\"adding product to my wish list\")\n        self.lp = LoginPage(self.driver)\n        self.lp.click_on_my_account()\n        self.lp.click_on_login_link()\n        self.lp.set_username(self.username)\n        self.lp.set_password(self.password)\n        self.lp.click_on_login_button()\n        self.logger.info(\"Login is successful\")\n        self.wl.click_on_modify_your_wish_list_option()\n        self.logger.info(\"Clicking on the modify your wish list option\")\n        self.pc = ProductComparePage(self.driver)\n>       self.wl.click_on_add_to_cart_button_in_wish_list()\n\ntestCases\\test_wish_list.py:682: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\WishListPage.py:143: in click_on_add_to_cart_button_in_wish_list\n    add_to_cart_button = WebDriverWait(self.driver, 10, poll_frequency=2).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"15f055ed59b5a8984cea0a1a5224ed0c\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000280CBCEC180>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff68ad86f95+76917]\nE       \tGetHandleVerifier [0x0x7ff68ad86ff0+77008]\nE       \t(No symbol) [0x0x7ff68ab39dea]\nE       \t(No symbol) [0x0x7ff68ab90256]\nE       \t(No symbol) [0x0x7ff68ab9050c]\nE       \t(No symbol) [0x0x7ff68abe3887]\nE       \t(No symbol) [0x0x7ff68abb84af]\nE       \t(No symbol) [0x0x7ff68abe065c]\nE       \t(No symbol) [0x0x7ff68abb8243]\nE       \t(No symbol) [0x0x7ff68ab81431]\nE       \t(No symbol) [0x0x7ff68ab821c3]\nE       \tGetHandleVerifier [0x0x7ff68b05d2cd+3051437]\nE       \tGetHandleVerifier [0x0x7ff68b057923+3028483]\nE       \tGetHandleVerifier [0x0x7ff68b0758bd+3151261]\nE       \tGetHandleVerifier [0x0x7ff68ada185e+185662]\nE       \tGetHandleVerifier [0x0x7ff68ada971f+218111]\nE       \tGetHandleVerifier [0x0x7ff68ad8fb14+112628]\nE       \tGetHandleVerifier [0x0x7ff68ad8fcc9+113065]\nE       \tGetHandleVerifier [0x0x7ff68ad76c98+10616]\nE       \tBaseThreadInitThunk [0x0x7ff9dbdbe8d7+23]\nE       \tRtlUserThreadStart [0x0x7ff9dce5c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "48e89c02-a9df-49e5-bf75-f26793c7aea1-attachment.txt", "type": "text/plain"}], "start": 1751870411407, "stop": 1751870429402, "uuid": "4e5211fd-6bc1-427a-a507-a7cfd6b86e8d", "historyId": "f9947470cdcbc4351c01dcabcc7c7f57", "testCaseId": "f9947470cdcbc4351c01dcabcc7c7f57", "fullName": "test_wish_list.Test_009_Wish_List#test_wish_list_016", "labels": [{"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_wish_list"}, {"name": "subSuite", "value": "Test_009_Wish_List"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "27504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_wish_list"}]}