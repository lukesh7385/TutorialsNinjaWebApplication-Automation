{"name": "test_register_functionality_005", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_register.Test_001_Register_Functionality object at 0x0000021961C9C830>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d2266f126fbf7d11509d70d7dfdf1fe\")>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_register_functionality_005(self, setup):\n        self.logger.info(\"******** Test Register Functionality 005 is Started *********\")\n        self.driver = setup\n        self.logger.info(\"Navigating to the url\")\n        self.driver.get(self.baseURL)\n        self.lp = LoginPage(self.driver)\n        self.logger.info(\"clicking on myAccount drop menu\")\n        self.lp.click_on_my_account()\n        self.rf = RegisterPage(self.driver)\n        self.logger.info(\"clicking on register link\")\n        self.rf.click_on_register_link()\n        self.logger.info(\"*************** Providing Registration Details ***************\")\n        self.rf.set_firstname(\"Lukesh\")\n        self.rf.set_lastname(\"Ade\")\n        self.email = self.rf.random_generator() + \"@gmail.com\"\n        self.rf.set_email(self.email)\n        self.rf.set_phone_no(\"1234567890\")\n        self.rf.set_password(\"12345\")\n        self.rf.set_confirm_password(\"12345\")\n        self.rf.click_on_checkbox_privacy_policy()\n        self.rf.click_on_continue_button()\n        self.logger.info(\"*************** Verifying Register Functionality 005 ***************\")\n        exp_title = \"Your Account Has Been Created!\"\n        if self.driver.title == exp_title:\n            self.rf.click_on_continue_button2()\n            exp_title = \"My Account\"\n            if self.driver.title == exp_title:\n                self.rf.clicking_on_news_letter_option()\n                if self.driver.find_element(By.XPATH, \"//input[@value='0']\").is_selected():\n                    self.driver.find_element(By.XPATH, \"//div[@class='pull-right']\").click()\n                    success_message = self.driver.find_element(By.XPATH,\n                                                               \"//div[@class='alert alert-success alert-dismissible']\").text\n                    if success_message == \"Success: Your newsletter subscription has been successfully updated!\":\n                        assert True\n                        self.logger.info(\"******* Test Register Functionality 005 is Passed ********\")\n                    else:\n                        self.logger.info(\"******* Test Register Functionality 005 is Failed ********\")\n                        self.driver.save_screenshot(\".\\\\Screenshots\\\\test_register_functionality_005_failed.png\")\n                        assert False\n                else:\n                    self.logger.info(\"******* Test Register Functionality 005 is Failed ********\")\n                    self.driver.save_screenshot(\".\\\\Screenshots\\\\test_register_functionality_005_failed.png\")\n                    assert False\n            else:\n                self.logger.info(\"**********  Test Register Functionality 005 is Failed **********\")\n                self.driver.save_screenshot(\".\\\\Screenshots\\\\\" + \"test_register_functionality_005.png\")\n                self.driver.close()\n                assert False\n    \n        else:\n            self.driver.save_screenshot(\".\\\\Screenshots\\\\\" + \"test_register_functionality_005_failed.png\")\n            self.logger.info(\"**********  Test Register Functionality 005 Failed **********\")\n            self.driver.close()\n>           assert False\nE           assert False\n\ntestCases\\test_register.py:264: AssertionError"}, "start": 1751784768266, "stop": 1751784772685, "uuid": "32a3fce3-b3f3-4aed-98f2-172888b06442", "testCaseId": "85f8cdb9bb42cfb22af903818bfa3a52", "fullName": "test_register.Test_001_Register_Functionality#test_register_functionality_005"}