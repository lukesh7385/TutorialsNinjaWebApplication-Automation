{"name": "test_product_compare_005", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <testCases.test_product_compare.Test_006_Product_Compare object at 0x000001CDC2FAA450>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b0bbbbb277651435df3d5539dadb78fb\")>\n\n    @pytest.mark.sanity\n    def test_product_compare_005(self, setup):\n        self.driver = setup\n        self.logger.info(\"***************** Test Product Compare 005 Is Start *****************\")\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to the url\")\n        self.pc = ProductComparePage(self.driver)\n        act = ActionChains(self.driver)\n        act.move_to_element(self.pc.hover_on_desktops_option()).move_to_element(\n            self.pc.clicking_on_show_all_desktops_option()).click().perform()\n        self.logger.info(\"hovering on desktops option and clicking on show all desktops option\")\n        self.pc.click_on_grid_view_button()\n        self.logger.info(\"Clicking on grid view button\")\n        self.logger.info(\"*************** Verifying Test Product Compare 005 ****************\")\n        self.tooltip_text = self.driver.find_element(By.XPATH,\n                                                     \"//*[@id='content']/div[4]/div[1]/div/div[2]/div[2]/button[3]\")\n        if self.tooltip_text.get_attribute(\"data-original-title\") == \"Compare this Product\":\n            self.pc.compare_this_product_option_available_on_the_product()\n            self.logger.info(\n                \"clicking on compare this product option available on the Product that is displayed in the Product Category page\")\n            if self.pc.success_message().__contains__(\n                    'Success: You have added Apple Cinema 30\" to your product comparison!'):\n                self.pc.click_on_product_comparison_link()\n                self.logger.info(\"clicking on product comparison link\")\n                if self.driver.title == \"Product Comparison\":\n                    assert True\n                    self.logger.info(\"*********** Test Product Compare 005 is Passed ***********\")\n                else:\n                    self.logger.info(f\"{self.driver.title}\")\n                    self.logger.error(\"********** Test Product Compare 005 is Failed ***********\")\n>                   assert False\nE                   assert False\n\ntestCases\\test_product_compare.py:206: AssertionError"}, "attachments": [{"name": "log", "source": "cd8c04a9-698f-4126-a39f-396e649958a7-attachment.txt", "type": "text/plain"}], "start": 1745777459309, "stop": 1745777464215, "uuid": "aa331bf1-dce0-4b9b-ae7d-c4448cb09698", "historyId": "caee1ca851d1169db5b7f53cb6cb3ce4", "testCaseId": "caee1ca851d1169db5b7f53cb6cb3ce4", "fullName": "testCases.test_product_compare.Test_006_Product_Compare#test_product_compare_005", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_product_compare"}, {"name": "subSuite", "value": "Test_006_Product_Compare"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "8776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_product_compare"}]}