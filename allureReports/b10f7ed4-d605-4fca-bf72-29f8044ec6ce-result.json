{"name": "test_product_display_012", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff63ff4fea5+79173]\n\tGetHandleVerifier [0x0x7ff63ff4ff00+79264]\n\t(No symbol) [0x0x7ff63fd09e5a]\n\t(No symbol) [0x0x7ff63fd60586]\n\t(No symbol) [0x0x7ff63fd6083c]\n\t(No symbol) [0x0x7ff63fdb4247]\n\t(No symbol) [0x0x7ff63fd889af]\n\t(No symbol) [0x0x7ff63fdb100d]\n\t(No symbol) [0x0x7ff63fd88743]\n\t(No symbol) [0x0x7ff63fd514c1]\n\t(No symbol) [0x0x7ff63fd52253]\n\tGetHandleVerifier [0x0x7ff64021a2dd+3004797]\n\tGetHandleVerifier [0x0x7ff64021472d+2981325]\n\tGetHandleVerifier [0x0x7ff640233380+3107360]\n\tGetHandleVerifier [0x0x7ff63ff6aa2e+188622]\n\tGetHandleVerifier [0x0x7ff63ff722bf+219487]\n\tGetHandleVerifier [0x0x7ff63ff58df4+115860]\n\tGetHandleVerifier [0x0x7ff63ff58fa9+116297]\n\tGetHandleVerifier [0x0x7ff63ff3f558+11256]\n\tBaseThreadInitThunk [0x0x7ffcb7cce8d7+23]\n\tRtlUserThreadStart [0x0x7ffcb871c34c+44]", "trace": "self = <testCases.test_product_display.Test_007_Product_Display object at 0x000002304F93F3F0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84d17c043cc8074125ea4b60f6f013c1\")>\n\n    @pytest.mark.sanity\n    def test_product_display_012(self, setup):\n        self.driver = setup\n        self.logger.info(\"*************************** Test Product Display 012 is Start ***************************\")\n        self.driver.get(self.baseURL)\n        self.logger.info(\"Navigating to base url\")\n        self.sf = SearchPage(self.driver)\n        self.sf.search_product(\"iMac\")\n        self.logger.info(\"Entering iMac product to search text box field\")\n        self.sf.click_on_search_button()\n        self.logger.info(\"Clicking on the search icon button\")\n        self.pc = ProductComparePage(self.driver)\n        self.pc.click_on_the_product_display_in_search_result()\n        self.logger.info(\"Clicking on the product display in search result\")\n        self.pd = ProductDisplayPage(self.driver)\n        self.pd.click_on_reviews_tab()\n        self.logger.info(\"Clicking on the review tab\")\n        self.pd.click_on_continue_button_in_review_tab()\n        self.logger.info(\"Clicking on the continue button\")\n        self.pd.wait_for_page_load()\n        self.logger.info(\"*************************** Verifying Test Product Display 012 ***************************\")\n>       warning_message = self.pd.get_mandatory_warning_message()\n\ntestCases\\test_product_display.py:523: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\ProductDisplayPage.py:249: in get_mandatory_warning_message\n    warning_message = WebDriverWait(self.driver, 10, poll_frequency=3).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84d17c043cc8074125ea4b60f6f013c1\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002304F9D9120>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff63ff4fea5+79173]\nE       \tGetHandleVerifier [0x0x7ff63ff4ff00+79264]\nE       \t(No symbol) [0x0x7ff63fd09e5a]\nE       \t(No symbol) [0x0x7ff63fd60586]\nE       \t(No symbol) [0x0x7ff63fd6083c]\nE       \t(No symbol) [0x0x7ff63fdb4247]\nE       \t(No symbol) [0x0x7ff63fd889af]\nE       \t(No symbol) [0x0x7ff63fdb100d]\nE       \t(No symbol) [0x0x7ff63fd88743]\nE       \t(No symbol) [0x0x7ff63fd514c1]\nE       \t(No symbol) [0x0x7ff63fd52253]\nE       \tGetHandleVerifier [0x0x7ff64021a2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff64021472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff640233380+3107360]\nE       \tGetHandleVerifier [0x0x7ff63ff6aa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff63ff722bf+219487]\nE       \tGetHandleVerifier [0x0x7ff63ff58df4+115860]\nE       \tGetHandleVerifier [0x0x7ff63ff58fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff63ff3f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ffcb7cce8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffcb871c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "attachments": [{"name": "log", "source": "a7c53fdd-529b-46df-95ce-a58429af7de9-attachment.txt", "type": "text/plain"}], "start": 1749069906007, "stop": 1749069918151, "uuid": "7ceb223a-7eb0-4912-9e64-43aff079d866", "historyId": "b286af700dc6dfa18fb5f21a43c353f5", "testCaseId": "b286af700dc6dfa18fb5f21a43c353f5", "fullName": "test_product_display.Test_007_Product_Display#test_product_display_012", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "suite", "value": "test_product_display"}, {"name": "subSuite", "value": "Test_007_Product_Display"}, {"name": "host", "value": "lukesh"}, {"name": "thread", "value": "15492-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_display"}]}